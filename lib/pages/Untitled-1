return Scaffold(
        resizeToAvoidBottomPadding: false,
        body: Stack(children: <Widget>[
          SingleChildScrollView(
            child: Column(
              children: <Widget>[
                Container(
                  height: height * .40,
                  decoration: BoxDecoration(
                    image: DecorationImage(
                      image: AssetImage("manipal.jpg"),
                      fit: BoxFit.fill,
                    ),
                  ),
                ),
                Container(
                  height: height * .60,
                  //color: Color.fromRGBO(190, 232, 223, 0.75),
                  color: Colors.white,
                )
              ],
            ),
          ),
          Center(
              child: Container(
            height: height * 0.9,
            width: width * 0.9,
            child: Center(
              child: ListView(
                children: <Widget>[
                  Container(
                    margin: EdgeInsets.only(top: height * 0.19),
                    height: height * 0.525,
                    width: width * 0.85,
                    child: Card(
                      elevation: 5.0,
                      child: Container(
                        color: Colors.black,
                        child: Center(
                          child: Column(
                            children: <Widget>[
                              Container(
                                color: Colors.red,
                                height: 120.0,
                                width: 300.0,
                                child: FlareActor("assets/first1.flr",
                                  alignment: Alignment.center,
                                  fit: BoxFit.cover,
                                  animation: "first"),
                              ),
                              Padding(
                                  padding: EdgeInsets.symmetric(vertical: 6.0)),
                              TextFormField(
                                cursorColor: Colors.orange,
                                controller: controllerReg,
                                decoration: InputDecoration(
                                    prefixIcon: Icon(Icons.folder),
                                    labelText: "Registration No."),
                                keyboardType: TextInputType.numberWithOptions(),
                              ),
                              Padding(
                                  padding: EdgeInsets.symmetric(
                                      vertical: height * 0.01)),
                              TextFormField(
                                controller: controllerPass,
                                obscureText: obs,
                                decoration: InputDecoration(
                                  prefixIcon: obs
                                      ? Icon(Icons.lock)
                                      : Icon(Icons.lock_open),
                                  labelText: "Password",
                                ),
                              ),
                              Padding(
                                  padding: EdgeInsets.symmetric(
                                      vertical: height * 0.005)),
                              IconButton(
                                icon: obs
                                    ? Icon(Icons.visibility_off)
                                    : Icon(Icons.visibility),
                                onPressed: () {
                                  setState(() {
                                    obs = !obs;
                                  });
                                },
                              ),
                              FlatButton(
                                child: Container(
                                  margin: EdgeInsets.only(top: height * 0.001),
                                  width: width * 0.89,
                                  height: height * 0.071,
                                  child: Card(
                                    elevation: 1.0,
                                    color: Color.fromRGBO(234, 116, 76, 1.0),
                                    child: Center(
                                      child: Text(
                                        "Login",
                                        style: TextStyle(
                                            color: Colors.white,
                                            fontSize: 18.0),
                                      ),
                                    ),
                                  ),
                                ),
                                onPressed: () {
                                  regNo = controllerReg.text;
                                  password = controllerPass.text;
                                  _checkCredentials(regNo, password);
                                },
                              ),
                            ],
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ))
        ]));

















        import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'slcm.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:io';
import 'package:flare_flutter/flare_actor.dart';
import 'colors/color.dart';

class Login extends StatefulWidget {
  @override
  createState() => new LoginState();
}

class LoginState extends State<Login> {
  TextEditingController controllerReg = new TextEditingController();
  TextEditingController controllerPass = new TextEditingController();

  String regNo;
  String password;
  bool obs = true;
  Icon visibility = Icon(Icons.visibility_off);

  void _showDialog(String title, String content) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: new Text(title),
          content: new Text(content),
          actions: <Widget>[
            new FlatButton(
              child: new Text("Close"),
              onPressed: () {
                Navigator.of(context).pop();
              },
            ),
          ],
        );
      },
    );
  }

  Future<http.Response> _getResponse(String reg, String pass) async {
    try {
      final String _slcmApi = 'http://139.59.65.42:8080/';
      var match = {'username': reg, 'password': pass};
      final response = await http.post(
        _slcmApi,
        headers: {HttpHeaders.contentTypeHeader: 'application/json'},
        body: json.encode(match),
      );
      return response;
    } on SocketException catch (e) {
      _showDialog("No Internet",
          "Please check your internet connection and try again!");
      print(e);
      return null;
    }
  }

  void _checkCredentials(String reg, String pass) {
    _getResponse(reg, pass).then((response) {
      if (response.statusCode == 200) {
        var res = json.decode(response.body);
        if (res['login'] == 'successful') {
          Navigator.push(
              context,
              MaterialPageRoute(
                  builder: (context) => StudentInfo(
                        json: res,
                      )));
        } else {
          _showDialog("Invalid Credentials",
              "Please enter a valid email and/or password.");
          controllerReg.clear();
          controllerPass.clear();
        }
      } else {
        _showDialog("Server Down",
            "It seems SLCM is down, please try again in some time.");
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    var height = MediaQuery.of(context).size.height;
    var width = MediaQuery.of(context).size.width;

    return Scaffold(
      backgroundColor: Colors.black,
      resizeToAvoidBottomPadding: false,
      body: Stack(
        // mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: <Widget>[
          Container(
            // color: Colors.redAccent.withOpacity(0.4),
            width: width,
            height: height * 0.5,
            child: Container(
              padding: EdgeInsets.only(left: width * 0.11),
              child: FlareActor("assets/first1.flr",
                  alignment: Alignment.center,
                  fit: BoxFit.cover,
                  animation: "first"),
            ),
          ),
          Container(
            height: height * 0.3,
            width: width,
            color: Colors.redAccent,
            margin: EdgeInsets.only(top: height * 0.4),
            child: Center(
              child: Container(
                width: width * 0.9,
                color: Colors.green,
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: <Widget>[
                    TextFormField(
                      cursorColor: Colors.orange,
                      controller: controllerReg,
                      decoration: InputDecoration(
                          prefixIcon: Icon(Icons.folder),
                          labelText: "Registration No."),
                      keyboardType: TextInputType.numberWithOptions(),
                    ),
                    TextFormField(
                      controller: controllerPass,
                      obscureText: obs,
                      decoration: InputDecoration(
                        prefixIcon:
                            obs ? Icon(Icons.lock) : Icon(Icons.lock_open),
                        labelText: "Password",
                      ),
                    ),
                    IconButton(
                      icon: obs
                          ? Icon(Icons.visibility_off)
                          : Icon(Icons.visibility),
                      onPressed: () {
                        setState(() {
                          obs = !obs;
                        });
                      },
                    ),
                  ],
                ),
              ),
            ),
          )
        ],
      ),
    );
  }
}
